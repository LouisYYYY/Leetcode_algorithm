#include <iostream>     // std::cout
#include <algorithm>    // std::sort
#include <vector>       // std::vector
using namespace std;
//这里从m
template<class T>
int getArraylen(T &nums) { return sizeof(nums) / sizeof(nums[0]); }
int FindMax(int nums[],int N) {
	int len = N;
	//cout << len << endl;
	int mid = (len - 1) / 2;
	int temp = 0;
	int target;
	while (mid > 0 && mid < len - 1) {
		//如果nums[mid]<nums[mid-1]  最大值在左边
		if (nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1]) {
			return mid;
		}else if (nums[mid] < nums[mid - 1]) {
			mid = (mid - 1) / 2;
		}else {
			mid = (mid + 1 + len - 1) / 2;
		}
	}
}
int main() {
	int nums[] = { 1,3,4,5,3,2 };
	int n = getArraylen(nums);
	cout << "最大的在第"<<FindMax(nums,n)<<"位。值为："<<nums[FindMax(nums,n)];
	getchar();
}

/*
注意
当数组传入函数时，传入的是指针，指针仅指向数组头arr[0]，不带有任何长度信息，所以在传入数组时，要把数组长度同时传入函数。
所以在C++中，也可以定义模板函数来传入长度
template<class T>
int getArraylen(T &nums) { return sizeof(nums) / sizeof(nums[0]); }
*/
